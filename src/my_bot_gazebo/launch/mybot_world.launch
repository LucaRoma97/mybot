<?xml version="1.0" encoding="UTF-8"?>
<launch>


 <!-- empty world -->	
  <arg name="world" default="empty"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find my_bot_gazebo)/worlds/ar_track_simple.world"/> 
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> 



  <!-- Robot on Gazebo 	-->

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find my_bot_description)/urdf/mybot.xacro'"/>

  <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
   args="-urdf -param robot_description -model mybot" />



 <!-- RViz -->

  <!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="False"/>
  </node> 

  <!-- Combine joint values -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/> 

  <!-- Show in Rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find my_bot_description)/rviz/ar_track_first.rviz"/> 


   <!-- The path_ekf_plotter node  -->
   <node name="path_ekf_plotter" type="path_ekf_plotter.py" pkg="odom_to_trajectory">
   </node> 	
  
   <!-- The path_odom_plotter node -->
   <node name="path_odom_plotter" type="path_odom_plotter.py" pkg="odom_to_trajectory">
   </node>  


  <!-- ar tag -->

    <param name="robot_description1" command="cat '$(find ar_tag)/urdf/ar_2.urdf'" />
    
    <arg name="x" default="1.3"/>
    <arg name="y" default="1"/>
    <arg name="z" default="0.1"/>
    
    <node name="AR_tag_spawn1" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description1 -model AR_tag1 -x $(arg x) -y $(arg y) -z $(arg z)" />



<!-- ar_track_node -->
    
   <arg name="marker_size" default="10.0" />
	<arg name="max_new_marker_error" default="0.02" />
	<arg name="max_track_error" default="0.2" />
	<arg name="output_frame" default="/camera_ar_track" />

	<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />

		<remap from="camera_image"  to="/mybot/camera1/image_raw" />
		<remap from="camera_info"   to="/mybot/camera1/camera_info" />
	</node> 


<!-- teleop 

     <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen">
     </node> -->

  
</launch> 
